name: CD Production Pipeline
on:
  push:
    branches:
      - production
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Kubernetes CLI
        uses: Azure/setup-kubectl@v3

      - name: Set up Minikube
        uses: medyagh/setup-minikube@master

      - name: Configure Minikube
        run: |
          minikube start
          minikube addons enable ingress
          # Wait for ingress controller
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=180s

      - name: Create namespace
        run: |
          kubectl create namespace weather-app --dry-run=client -o yaml | kubectl apply -f -

      - name: Create secrets
        run: |
          echo "${{ secrets.WEATHER_API_KEY }}" | base64 > weather-api-key.txt
          kubectl create secret generic weather-secrets \
            --from-file=api-key=weather-api-key.txt \
            -n weather-app \
            --dry-run=client -o yaml | kubectl apply -f -
          rm weather-api-key.txt

      - name: Deploy core resources
        run: |
          kubectl apply -f k8s/configmap.yaml -n weather-app
          kubectl apply -f k8s/service.yaml   -n weather-app
          kubectl apply -f k8s/deployment.yaml -n weather-app
          kubectl apply -f k8s/persistent-volume.yaml -n weather-app

      - name: Deploy ingress
        run: |
          kubectl apply -f k8s/ingress.yaml -n weather-app

      - name: Wait for deployments
        continue-on-error: true
        run: |
          timeout 100s kubectl wait --for=condition=available deployment/backend-deployment  -n weather-app || true
          timeout 100s kubectl wait --for=condition=available deployment/frontend-deployment -n weather-app || true

      - name: Get deployment status
        continue-on-error: true
        run: |
          kubectl get deployments -n weather-app
          kubectl get pods        -n weather-app

      - name: Get backend pod logs
        continue-on-error: true
        run: |
          kubectl logs -n weather-app -l app=backend --tail=50

      - name: Get all service URLs
        run: |
          minikube service list -n weather-app

      - name: Get frontend URL
        id: frontend_url
        run: |
          URL=$(minikube service frontend-service -n weather-app --url)
          echo "Frontend URL=$URL" >> $GITHUB_OUTPUT

      - name: Smoke-test frontend
        run: |
          echo "Pinging ${{ steps.frontend_url.outputs.Frontend URL }}"
          curl --fail ${{ steps.frontend_url.outputs.Frontend URL }}/healthz
